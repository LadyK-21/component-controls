// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`prop-types prop-types.js 1`] = `
Object {
  "description": "General component description.",
  "displayName": "MyComponent",
  "methods": Array [],
  "props": Object {
    "optionalArray": Object {
      "description": "You can declare that a prop is a specific JS primitive. By default, these
are all optional.",
      "type": Object {
        "name": "array",
      },
    },
    "optionalArrayOf": Object {
      "description": "An array of a certain type",
      "type": Object {
        "name": "array",
        "value": Array [
          Object {
            "name": "number",
          },
        ],
      },
    },
    "optionalBool": Object {
      "type": Object {
        "name": "boolean",
      },
    },
    "optionalElement": Object {
      "description": "A React element (ie. <MyComponent />).",
      "type": Object {
        "name": "any",
        "raw": "element",
      },
    },
    "optionalElementType": Object {
      "description": "A React element type (ie. MyComponent).",
      "type": Object {
        "name": "any",
        "raw": "elementType",
      },
    },
    "optionalEnum": Object {
      "description": "You can ensure that your prop is limited to specific values by treating
it as an enum.",
      "type": Object {
        "name": "enum",
        "value": Array [
          Object {
            "name": "string",
            "value": "News",
          },
          Object {
            "name": "string",
            "value": "Photos",
          },
        ],
      },
    },
    "optionalFunc": Object {
      "type": Object {
        "name": "function",
        "required": false,
      },
    },
    "optionalMessage": Object {
      "description": "You can also declare that a prop is an instance of a class. This uses
JS's instanceof operator.",
      "type": Object {
        "name": "object",
        "raw": "instanceOf",
        "value": "Message",
      },
    },
    "optionalNode": Object {
      "description": "Anything that can be rendered: numbers, strings, elements or an array
(or fragment) containing these types.",
      "type": Object {
        "name": "any",
        "raw": "node",
      },
    },
    "optionalNumber": Object {
      "defaultValue": "21",
      "type": Object {
        "name": "number",
        "required": false,
      },
    },
    "optionalObject": Object {
      "type": Object {
        "name": "object",
        "required": false,
      },
    },
    "optionalObjectOf": Object {
      "description": "An object with property values of a certain type",
      "type": Object {
        "name": "object",
        "value": Array [
          Object {
            "name": "number",
          },
        ],
      },
    },
    "optionalObjectWithShape": Object {
      "description": "An object taking on a particular shape",
      "type": Object {
        "name": "object",
        "value": Array [
          Object {
            "name": "string",
            "value": "optionalProperty",
          },
          Object {
            "name": "number",
            "required": true,
            "value": "requiredProperty",
          },
        ],
      },
    },
    "optionalObjectWithStrictShape": Object {
      "description": "An object with warnings on extra properties",
      "type": Object {
        "name": "object",
        "value": Array [
          Object {
            "name": "string",
            "value": "optionalProperty",
          },
          Object {
            "name": "number",
            "required": true,
            "value": "requiredProperty",
          },
        ],
      },
    },
    "optionalString": Object {
      "type": Object {
        "name": "string",
        "required": false,
      },
    },
    "optionalSymbol": Object {
      "type": Object {
        "name": "symbol",
        "required": false,
      },
    },
    "optionalUnion": Object {
      "description": "An object that could be one of many types",
      "type": Object {
        "name": "union",
        "value": Array [
          Object {
            "name": "string",
          },
          Object {
            "name": "number",
          },
          Object {
            "name": "object",
            "raw": "instanceOf",
            "value": "Message",
          },
        ],
      },
    },
    "requiredAny": Object {
      "description": "A value of any data type",
      "type": Object {
        "name": "any",
        "required": true,
      },
    },
    "requiredFunc": Object {
      "type": Object {
        "name": "function",
        "required": true,
      },
    },
  },
}
`;
