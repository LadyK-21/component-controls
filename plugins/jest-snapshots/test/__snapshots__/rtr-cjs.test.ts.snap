// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rtr  cjs 1`] = `
"const path = require('path');
const MatchMediaMock = require('jest-matchmedia-mock').default;
const {
  loadConfigurations,
  extractDocuments,
} = require('@component-controls/config');
const { renderExample } = require('@component-controls/test-renderers');
const { render: reactRender } = require('@component-controls/render/react');

const renderer = require('react-test-renderer');


let matchMedia;

describe('component-controls generated', () => {
  beforeAll(() => {
    jest.mock('rc-util/lib/Portal');
    matchMedia = new MatchMediaMock();
  });
  afterEach(() => {
    matchMedia.clear();
  });
  const configPath = path.resolve(__dirname, '.config');
  const config = loadConfigurations(configPath);
  if (!config.renderFn) {
    config.renderFn = reactRender;
  }
  const documents = extractDocuments({ config, configPath });
  if (documents) {
    documents.forEach(file => {
      const exports = require(file);
      const doc = exports.default;
      const examples = Object.keys(exports)
        .filter(key => key !== 'default')
        .map(key => exports[key]);

      if (examples.length) {
        describe(doc.title, () => {
          examples.forEach(example => {
            it(example.name, async () => {
              let rendered;
              renderer.act(() => {
              rendered = renderExample({
                example,
                doc,
                config,
              });
              })
              const component = renderer.create(rendered);
              const serialize = component ? component.toJSON : () => undefined;

              expect(serialize()).toMatchSnapshot();
            });
          });
        });
      }
    });
  }
  
});
"
`;
