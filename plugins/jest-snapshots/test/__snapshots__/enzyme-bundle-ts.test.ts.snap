// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`enzyme bundle ts 1`] = `
"import path from 'path';
import MatchMediaMock from 'jest-matchmedia-mock';
import { loadStore } from '@component-controls/store';
const { render: reactRender } = require('@component-controls/render/react');

import { mount, configure } from 'enzyme';
import toJson from 'enzyme-to-json';
import Adapter from '@wojtekmaj/enzyme-adapter-react-17';

configure({ adapter: new Adapter() });


let matchMedia: MatchMediaMock;

describe('component-controls generated', () => {
  beforeAll(() => {
    jest.mock('rc-util/lib/Portal');
    matchMedia = new MatchMediaMock();
  });
  afterEach(() => {
    matchMedia.clear();
  });
const store = loadStore(require(path.resolve(__dirname, './bundle/component-controls.js')));
const renderFn = store.config.renderFn || reactRender;
Object.keys(store.docs).forEach(docId => {
  const doc = store.docs[docId];
  if (doc.stories && doc.stories.length) {
    const stories = doc.stories;
    describe(doc.title, () => {
      stories.forEach(storyId => {
        const story = store.stories[storyId];
        it(story.name, async () => {
              let rendered;
              rendered = renderFn(story, doc);
              const component = mount(rendered);
              const serialize = () => toJson(component, { mode: 'deep' });

          expect(serialize()).toMatchSnapshot();
        });
      });
    });
  }
}); 
});
"
`;
