// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rtr  cjs 1`] = `
"const path = require('path');
const { run } = require('axe-core');
const { reactRunDOM } = require('@component-controls/test-renderers');
require('@component-controls/jest-axe-matcher');

const { loadConfigurations } = require('@component-controls/config');
const { renderDocument } = require('@component-controls/test-renderers');
const renderer = require('react-test-renderer');
const {
  renderErr,
  componentErr,
} = require('@component-controls/test-renderers');
const act = renderer.act;

const examples = require('./fixtures/VariantButton.docs');
const data = require('./VariantButton.data');

describe('VariantButton', () => {
  const configPath = path.resolve(__dirname, '.config');
  const config = loadConfigurations(configPath);
  let renderedExamples = [];
  act(() => {
    renderedExamples = renderDocument(examples, config, data);
  });
  if (!renderedExamples.length) {
    renderErr();
    return;
  }
  renderedExamples.forEach(({ name, rendered, dataId, values }) => {
    describe(name, () => {
      const runTests = () => {
        it('snapshot', () => {
          const component = renderer.create(rendered);
          if (!component) {
            componentErr();
            return;
          }
          expect(component.toJSON()).toMatchSnapshot();
        });
        it('accessibility', async () => {
          const axeResults = await reactRunDOM(rendered, run);
          expect(axeResults).toHaveNoAxeViolations();
        });
      };
      if (dataId && values) {
        describe(dataId, runTests);
      } else {
        runTests();
      }
    });
  });
});
"
`;
