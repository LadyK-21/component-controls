// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test typescript react settings compile 1`] = `
Object {
  "buildConfig": Object {
    "categories": Array [
      "author",
      "tags",
    ],
    "ignore": Array [
      "readme.md",
      "changelog.md",
      "code_of_conduct.md",
      "contributing.md",
      "license.md",
    ],
    "pages": Object {
      "author": Object {
        "basePath": "authors/",
      },
      "blog": Object {
        "basePath": "blogs/",
      },
      "page": Object {
        "basePath": "pages/",
      },
      "story": Object {
        "basePath": "docs/",
        "sideNav": Object {
          "collapseSingle": true,
          "storyPaths": true,
        },
        "tabs": Array [
          Object {
            "route": "page",
            "template": [Function],
            "title": "Documentation",
          },
        ],
      },
      "tags": Object {
        "basePath": "tags/",
      },
    },
    "search": Object {
      "searchingModule": "@component-controls/search-fusejs",
    },
    "siteMap": Object {
      "pages": Object {
        "doc": Object {
          "priority": 0.5,
        },
        "home": Object {
          "priority": 1,
        },
        "index": Object {
          "priority": 0.8,
        },
      },
    },
    "siteRoot": "/",
    "stories": Array [
      "../../../../ui/components/src/ActionBar/*.stories.(js|jsx|tsx|mdx)",
    ],
  },
  "components": Object {
    "fded7dbaa855ea6869a794f877eab680": Object {
      "externalDependencies": Object {
        "react": Array [
          Object {
            "importedName": "FC",
            "name": "FC",
          },
          Object {
            "importedName": "useMemo",
            "name": "useMemo",
          },
        ],
        "theme-ui": Array [
          Object {
            "importedName": "Box",
            "name": "Box",
          },
          Object {
            "importedName": "Button",
            "name": "Button",
          },
          Object {
            "importedName": "jsx",
            "name": "jsx",
          },
        ],
      },
      "from": "./ActionBar",
      "importedName": "ActionBar",
      "info": Object {
        "description": "a strip of actions to be attached to a container
the action items contain the labels and click event handler
actions can accept an order prop, and can also be superimposed",
        "displayName": "ActionBar",
        "methods": Array [],
        "props": Object {
          "actions": Object {
            "defaultValue": "[]",
            "description": "collection of action items",
            "parentName": "ActionBarProps",
            "type": Object {
              "name": "ActionItems",
              "raw": "ActionItems",
            },
          },
          "themeKey": Object {
            "defaultValue": "actionbar",
            "description": "custom layouts from the theme, defaults to 'actionbar'",
            "parentName": "ActionBarProps",
            "type": Object {
              "name": "string",
              "raw": "string",
            },
          },
        },
      },
      "jsx": Array [
        Object {
          "attributes": Array [
            "key",
            "sx",
          ],
          "children": Array [
            Object {
              "attributes": Array [
                "variant",
                "href",
                "aria-label",
              ],
              "children": Array [],
              "componentKey": "eb9509951cd0102ae95e248d1c9b0cd0",
              "from": "../Link",
              "importedName": "Link",
              "name": "Link",
            },
            Object {
              "attributes": Array [
                "variant",
                "onClick",
                "aria-label",
              ],
              "children": Array [],
              "from": "theme-ui",
              "importedName": "Button",
              "name": "Button",
            },
          ],
          "from": "theme-ui",
          "importedName": "Box",
          "name": "Box",
        },
        Object {
          "attributes": Array [
            "variant",
          ],
          "children": Array [
            Object {
              "attributes": Array [
                "variant",
              ],
              "children": Array [],
              "from": "theme-ui",
              "importedName": "Box",
              "name": "Box",
            },
          ],
          "from": "theme-ui",
          "importedName": "Box",
          "name": "Box",
        },
      ],
      "loc": Object {
        "end": Object {
          "column": 1,
          "line": 78,
        },
        "start": Object {
          "column": 45,
          "line": 25,
        },
      },
      "localDependencies": Object {
        "../Link": Array [
          Object {
            "componentKey": "eb9509951cd0102ae95e248d1c9b0cd0",
            "importedName": "Link",
            "name": "Link",
          },
        ],
        "./utils": Array [
          Object {
            "componentKey": "8dc313d6e0b96be3972f9f034f201d63",
            "importedName": "getSortedActions",
            "name": "getSortedActions",
          },
          Object {
            "componentKey": "5562debad46d8a256b666ad14fc1be3a",
            "importedName": "ActionItems",
            "name": "ActionItems",
          },
        ],
      },
      "name": "ActionBar",
      "package": "fded7dbaa855ea6869a794f877eab680",
      "request": "/Users/atanasster/component-controls/ui/components/src/ActionBar/ActionBar.tsx",
      "source": "/** @jsx jsx */
import { FC, useMemo } from 'react';
import { Box, Button, jsx } from 'theme-ui';
import { getSortedActions, ActionItems } from './utils';
import { Link } from '../Link';

export interface ActionBarProps {
  /**
   * collection of action items
   */
  actions?: ActionItems;

  /**
   * custom layouts from the theme, defaults to 'actionbar'
   */
  themeKey?: string;
}

/**
 * a strip of actions to be attached to a container
 * the action items contain the labels and click event handler
 * actions can accept an order prop, and can also be superimposed
 *
 */
export const ActionBar: FC<ActionBarProps> = ({
  actions = [],
  themeKey = 'actionbar',
}) => {
  const items = useMemo(() => {
    const sortedItems = getSortedActions(actions);
    return sortedItems.map(
      ({ node, onClick, 'aria-label': ariaLabel, group, href }, index) => {
        const nextGroup =
          index < sortedItems.length - 1 ? sortedItems[index + 1].group : group;
        return (
          <Box
            key={\`\${typeof node === 'string' ? node : 'item'}_\${index}\`}
            sx={{
              mr: index === 0 ? 1 : 0,
              ml: nextGroup !== group || group === undefined ? 2 : 1,
              display: 'flex',
              flexDirection: 'row',
              alignItems: 'center',
              variant: \`\${themeKey}.item\`,
            }}
          >
            {typeof node === 'string' ? (
              href ? (
                <Link
                  variant={\`\${themeKey}.link\`}
                  href={href}
                  aria-label={ariaLabel}
                >
                  {node}
                </Link>
              ) : (
                <Button
                  variant={\`\${themeKey}.button\`}
                  onClick={onClick}
                  aria-label={ariaLabel}
                >
                  {node}
                </Button>
              )
            ) : (
              node
            )}
          </Box>
        );
      },
    );
  }, [actions, themeKey]);
  return (
    <Box variant={\`\${themeKey}.container\`}>
      <Box variant={\`\${themeKey}.inner\`}>{items}</Box>
    </Box>
  );
};
",
    },
  },
  "config": undefined,
  "packages": Object {
    "8c5a495b6c81e803332610dad9861480": Object {
      "dependencies": Object {
        "@primer/octicons-react": "^10.0.0",
        "@theme-ui/match-media": "^0.6.0-alpha.1",
        "@theme-ui/presets": "^0.6.0-alpha.1",
        "copy-to-clipboard": "^3.2.1",
        "fast-memoize": "^2.5.2",
        "markdown-to-jsx": "^6.11.0",
        "mdx-utils": "*",
        "prism-react-renderer": "^1.0.2",
        "react-animate-height": "^2.0.20",
        "react-popper-tooltip": "^3.1.0",
        "react-switch": "^5.0.1",
        "react-table": "^7.0.0",
        "react-tabs": "^3.1.0",
        "scroll-into-view-if-needed": "^2.2.25",
        "theme-ui": "^0.6.0-alpha.3",
      },
      "devDependencies": Object {
        "@component-controls/jest-snapshots": "^2.4.0",
        "@component-controls/ts-markdown-docs": "^2.2.0",
        "@theme-ui/css": "^0.6.0-alpha.1",
        "@types/markdown-to-jsx": "^6.11.0",
        "@types/react": "^16.9.34",
        "@types/react-table": "^7.0.10",
        "@types/react-tabs": "^2.3.1",
        "cross-env": "^5.2.1",
        "eslint": "^6.5.1",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "typescript": "^4.0.5",
      },
      "fileHash": "8c5a495b6c81e803332610dad9861480",
      "name": "@component-controls/components",
      "peerDependencies": Object {
        "@theme-ui/css": ">= 0.4.0-rc.1",
        "react": "^16.8.0 || ^17",
        "react-dom": "^16.8.0 || ^17",
      },
      "repository": Object {
        "browse": "https://github.com/ccontrols/component-controls/tree/master/ui/components/src/ActionBar/ActionBar.stories.tsx",
        "docs": "https://github.com/ccontrols/component-controls/tree/master#readme",
        "issues": "https://github.com/ccontrols/component-controls/issues",
      },
      "version": "2.4.0",
    },
    "fded7dbaa855ea6869a794f877eab680": Object {
      "dependencies": Object {
        "@primer/octicons-react": "^10.0.0",
        "@theme-ui/match-media": "^0.6.0-alpha.1",
        "@theme-ui/presets": "^0.6.0-alpha.1",
        "copy-to-clipboard": "^3.2.1",
        "fast-memoize": "^2.5.2",
        "markdown-to-jsx": "^6.11.0",
        "mdx-utils": "*",
        "prism-react-renderer": "^1.0.2",
        "react-animate-height": "^2.0.20",
        "react-popper-tooltip": "^3.1.0",
        "react-switch": "^5.0.1",
        "react-table": "^7.0.0",
        "react-tabs": "^3.1.0",
        "scroll-into-view-if-needed": "^2.2.25",
        "theme-ui": "^0.6.0-alpha.3",
      },
      "devDependencies": Object {
        "@component-controls/jest-snapshots": "^2.4.0",
        "@component-controls/ts-markdown-docs": "^2.2.0",
        "@theme-ui/css": "^0.6.0-alpha.1",
        "@types/markdown-to-jsx": "^6.11.0",
        "@types/react": "^16.9.34",
        "@types/react-table": "^7.0.10",
        "@types/react-tabs": "^2.3.1",
        "cross-env": "^5.2.1",
        "eslint": "^6.5.1",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "typescript": "^4.0.5",
      },
      "fileHash": "fded7dbaa855ea6869a794f877eab680",
      "name": "@component-controls/components",
      "peerDependencies": Object {
        "@theme-ui/css": ">= 0.4.0-rc.1",
        "react": "^16.8.0 || ^17",
        "react-dom": "^16.8.0 || ^17",
      },
      "repository": Object {
        "browse": "https://github.com/ccontrols/component-controls/tree/master/ui/components/src/ActionBar/ActionBar.tsx",
        "docs": "https://github.com/ccontrols/component-controls/tree/master#readme",
        "issues": "https://github.com/ccontrols/component-controls/issues",
      },
      "version": "2.4.0",
    },
  },
  "search": [Function],
  "stores": Array [
    Object {
      "doc": Object {
        "component": "ActionBar",
        "components": Object {},
        "componentsLookup": Object {
          "ActionBar": "fded7dbaa855ea6869a794f877eab680",
        },
        "date": "2020-10-29T01:16:52.595Z",
        "dateModified": "2020-12-06T02:30:15.977Z",
        "fileName": "/Users/atanasster/component-controls/ui/components/src/ActionBar/ActionBar.stories.tsx",
        "package": "8c5a495b6c81e803332610dad9861480",
        "title": "Components/ActionBar",
      },
      "filePath": "/Users/atanasster/component-controls/ui/components/src/ActionBar/ActionBar.stories.tsx",
      "stories": Object {
        "groupEnd": Object {
          "arguments": Array [],
          "id": "groupEnd",
          "loc": Object {
            "end": Object {
              "column": 1,
              "line": 122,
            },
            "start": Object {
              "column": 33,
              "line": 104,
            },
          },
          "name": "groupEnd",
          "renderFn": [Function],
          "source": "() => (
  <Container>
    <ActionBar
      actions={[
        {
          node: 'item 1',
        },
        {
          node: 'item 2',
          group: '1',
        },
        {
          node: 'item 3',
          group: '1',
        },
      ]}
    />
  </Container>
)",
        },
        "groupStart": Object {
          "arguments": Array [],
          "id": "groupStart",
          "loc": Object {
            "end": Object {
              "column": 1,
              "line": 142,
            },
            "start": Object {
              "column": 35,
              "line": 124,
            },
          },
          "name": "groupStart",
          "renderFn": [Function],
          "source": "() => (
  <Container>
    <ActionBar
      actions={[
        {
          node: 'item 1',
          group: '1',
        },
        {
          node: 'item 2',
          group: '1',
        },
        {
          node: 'item 3',
        },
      ]}
    />
  </Container>
)",
        },
        "link": Object {
          "arguments": Array [],
          "id": "link",
          "loc": Object {
            "end": Object {
              "column": 1,
              "line": 61,
            },
            "start": Object {
              "column": 29,
              "line": 51,
            },
          },
          "name": "link",
          "renderFn": [Function],
          "source": "() => (
  <Container>
    <ActionBar
      actions={[
        {
          node: <ExternalLink href=\\"https://google.com\\">google</ExternalLink>,
        },
      ]}
    />
  </Container>
)",
        },
        "order": Object {
          "arguments": Array [],
          "id": "order",
          "loc": Object {
            "end": Object {
              "column": 1,
              "line": 80,
            },
            "start": Object {
              "column": 30,
              "line": 63,
            },
          },
          "name": "order",
          "renderFn": [Function],
          "source": "() => (
  <Container>
    <ActionBar
      actions={[
        {
          node: 'action 1',
          onClick: () => console.log('clicked'),
          order: 1,
        },
        {
          node: <ExternalLink href=\\"https://google.com\\">google</ExternalLink>,
          onClick: () => console.log('clicked'),
          order: 0,
        },
      ]}
    />
  </Container>
)",
        },
        "override": Object {
          "arguments": Array [],
          "id": "override",
          "loc": Object {
            "end": Object {
              "column": 1,
              "line": 102,
            },
            "start": Object {
              "column": 33,
              "line": 82,
            },
          },
          "name": "override",
          "renderFn": [Function],
          "source": "() => (
  <Container>
    <ActionBar
      actions={[
        {
          node: 'action 1',
          onClick: () => console.log('clicked'),
          id: 'copy',
        },
        {
          node: <ExternalLink href=\\"https://google.com\\">google</ExternalLink>,
          onClick: () => console.log('clicked'),
        },
        {
          node: 'Copy',
          id: 'copy',
        },
      ]}
    />
  </Container>
)",
        },
        "overview": Object {
          "arguments": Array [
            Object {
              "loc": Object {
                "end": Object {
                  "column": 13,
                  "line": 0,
                },
                "start": Object {
                  "column": 1,
                  "line": 0,
                },
              },
              "value": Array [
                Object {
                  "loc": Object {
                    "end": Object {
                      "column": 11,
                      "line": 0,
                    },
                    "start": Object {
                      "column": 3,
                      "line": 0,
                    },
                  },
                  "name": "themeKey",
                  "usage": Array [
                    Object {
                      "loc": Object {
                        "end": Object {
                          "column": 24,
                          "line": 3,
                        },
                        "start": Object {
                          "column": 16,
                          "line": 3,
                        },
                      },
                    },
                  ],
                  "value": "themeKey",
                },
              ],
            },
          ],
          "controls": Object {
            "themeKey": Object {
              "options": Array [
                "actionbar",
                "toolbar",
                "footer",
              ],
              "type": "options",
              "value": "actionbar",
            },
          },
          "id": "overview",
          "loc": Object {
            "end": Object {
              "column": 1,
              "line": 41,
            },
            "start": Object {
              "column": 49,
              "line": 25,
            },
          },
          "name": "overview",
          "renderFn": [Function],
          "source": "({ themeKey }) => (
  <Container>
    <ActionBar
      themeKey={themeKey}
      actions={[
        {
          node: 'action 1',
          onClick: () => console.log('clicked'),
        },
        {
          node: <ExternalLink href=\\"https://google.com\\">google</ExternalLink>,
          onClick: () => console.log('clicked'),
        },
      ]}
    />
  </Container>
)",
        },
      },
    },
  ],
}
`;
